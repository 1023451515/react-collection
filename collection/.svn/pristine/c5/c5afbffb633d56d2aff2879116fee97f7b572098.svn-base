<template>
  <div class="upload">
    <el-dialog title="导入用户信息" :close-on-click-modal="false" :show-close="true" :visible.sync="uploadDialogShow" width="50%" :center="true" @close="closeDialog">
      <el-steps :active="status"  finish-status="success" simple style="margin-top: 20px">
        <el-step title="上传文件" icon="el-icon-upload" ></el-step>
        <el-step title="导入数据" icon="el-icon-document" ></el-step>
        <el-step title="完成" icon="el-icon-success" ></el-step>
      </el-steps>
      <div class="template">
        <p>1. 请按照模板格式准备需要导入的数据</p>
        <p><a > <el-button size="mini" class="el-icon-download"  type="primary">下载模板</el-button></a></p>
      </div>
      <div class="template">
        <p>2. 请选择需要导入的文件</p>
        <p><a> <el-button size="mini" class="el-icon-upload"  type="primary">上传文件 <input type="file" id="file_upload"  @change="uploadFile"  ></el-button></a> 支持xls,xlsx，单个文件不大于2M</p>
        <p>{{ fileName}}</p>
      </div>
      <div class="btn">
          <p>
             <el-button size="mini" type="primary" @click="submit()">提交</el-button>
             <el-button size="mini" @click="cancel()">取消</el-button>  
          </p>
         
      </div>
    </el-dialog>
  </div>
</template>
<script>
  export default {
    name: 'uploadComponent',
    data() {
      return {
        status:0,
        file: {},
        fileName: ''
      }
    },
    props: {
      orgId: {
        type:Number
      },
      uploadDialogShow: {
        type: Boolean
      }
    },
    methods: {

      // 关闭遮罩层  
      closeDialog() {
        //this.$refs.form.resetFields();
        this.$emit('uploadClose');
      },

      // 上传文件
      uploadFile() {
         let files = document.getElementById('file_upload').files;
           let img = document.getElementsByClassName('logo_img')[0];
           let self = this;
           if(files && files.length){
               let reader = new FileReader();  
               reader.readAsDataURL(files[0]);
               reader.onload = function(e){
                   let size = files[0].size / 1024 ;
                   let length = files[0].name.length;
                   let arr = files[0].name.split('.');
                   let type = arr[arr.length-1];
                   if(size > 20*1024) {
                       self.$message.error('文件不能大于20M');
                       self.file = '';
                       self.fileName= '';
                       return false;
                   }
                   if(type != 'xls' || type != 'xlsx' ) {
                       self.$message.error('文件格式只能为xls或xlsx格式'); 
                       self.file = '';
                       self.fileName= '';
                       return false;
                   } 
                   self.file = file[0];
                   self.fileName= name;     
                }
        }
      },

      // 调用接口，提交文件
      submit() {

      },
      
      // 取消上传文件
      cancel() {
        var  dom = document.getElementById('file_upload');
        dom.value = '';
        this.file = '';
        this.fileName = '';
      }
    }
  }


</script>
<style lang="scss" >
  .el-step.is-simple .el-step__head {
    padding-top:10px
  }
  .template {
    margin:20px 0 0 20px;
    padding:0px 20px;
    p {
        margin-top:10px;
    }
  }
  .btn {
      text-align: right;
      margin: 0 20px 0 0
  }

  .el-dialog--center .el-dialog__body {
      margin-top: 0
  }
</style>

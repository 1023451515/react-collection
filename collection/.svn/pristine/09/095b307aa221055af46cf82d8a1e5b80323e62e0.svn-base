<template>
  <div class="form">
    <el-dialog :close-on-click-modal="false" :show-close="true" width="50%" title="批量分案"  :visible.sync="allotGroupShow" :center="true"  id="dialog" @close="close">
       <el-form >  
        <el-form-item label="选择部门" prop="aDepartmentIds" >
            <el-cascader :options="departments" v-model="aDepartmentIds"  @change="handleChange" change-on-select :props="departmentProps"> </el-cascader>
        </el-form-item>
        <el-form-item label=""   prop="aStuffId" >
          <el-radio v-model="radio" label="1">按委案金额</el-radio>
          <el-radio v-model="radio" label="2">按委案数量</el-radio>
        </el-form-item>
        <el-form-item label="" >
          <el-table :data="tableData" style="width: 100%">
             <el-table-column prop="worker" label="催收员" width="120">
             </el-table-column>
             <el-table-column prop="percent" label="比例" width="120" >
                 <template slot-scope="scope">
                  <el-input v-model="scope.row.percent"  width="60px" value="number"  class="edit" @blur="checkPercent(scope.row)" > </el-input>
                </template>
             </el-table-column>
             <el-table-column prop="errMsg" label="错误提示" width="auto" class="errMsg">
                <template slot-scope="scope">
                <span style="color:#f00">{{scope.row.errMsg}}</span> 
                </template>
             </el-table-column>
             <!-- <el-table-column prop="proportion" label="操作" width="60">
                <template slot-scope="scope">
                <el-button size="mini" @click="edit(scope.row)" type="text" >编辑</el-button>
                </template>
             </el-table-column> -->
         
          </el-table>
        </el-form-item>    
        <el-form-item>
          <el-button size="mini" type="primary" @click.prevent="submitForm">提交</el-button>
          <el-button size="mini" @click="cancelForm">取消</el-button>
        </el-form-item>
      </el-form>  
    </el-dialog>     
  </div>
</template>
<script>
  import qs from "qs";
  export default {
    name: 'allotCaseGroup',
    data() {
      return {
        aDepartmentIds:[],
        aStuffId: '',
        departmentProps: {
          label: "name",
          value: "id"
        },
        workers: [],
        departmentId: '',
        hasAbility: false,
        radio:'1',
        hasFault: false,
        tableData: [
          {
            worker: '第一个',
            percent: '20',
            errMsg: '不能超过100%'
          },
          {
            worker: '第一个',
            percent: '20',
            errMsg: '不能超过100%'
          },
          {
            worker: '第一个',
            percent: '20',
            errMsg: '不能超过100%'
          }
        ],
        rules: {
          percent: [{
            pattern: /^1[0-9]{0,2}$/,
            message: "格式不正确",
            trigger: "blur",
          }]  
        }
      }
    },
    props: {
      allotGroupShow: {
        type: Boolean,
      },
      departments: {
        type: Array,
      },
      selected: {
        type: Array
      }
    },
    methods: {

      // 关闭dialog
      close() {
       // this.$refs.allotCase.resetFields();
       this.aDepartmentIds = [];
       this.$emit('allotGroupClose');        
      },

     // 选择部门
      handleChange(data) {
        this.aStuffId = '';
        this.departmentId = this.aDepartmentIds[this.aDepartmentIds.length-1];
        this.checkDepartment();
      },

      // 提交表单
      submitForm() {
        if(this.departmentId) {
          if(!this.hasAbility) {
            if(!this.aStuffId) {
              this.$alert("未选择催收员！", "提示", {
                confirmButtonText: "确定",
                type: 'warning'
              });
              return false
            } 
          }
          this.allotChooseCase()
        } 
        else {
          this.$alert("未选择部门！", "提示", {
              confirmButtonText: "确定",
              type: 'warning'
          });
        }
      },

      // 表单重置
      cancelForm() {
        this.aDepartmentIds = [];
        this.aStuffId = '';
        this.$emit('allotClose');
      },

      // 获取所选部门的催收员
      getWorkers() {
        this.$axios
          .post("/api/assignee/caseManage/getStaffs", {
            departmentId: this.departmentId
          })
          .then(res => {
            if (res.data.code == 0) {
              this.workers = res.data.data;
            } else {
              this.$util.failCallback(res.data, this);
            }
          })
          .catch(err => {
            console.log(err);
          });
      },

      // 检查部门组长是否有权限 /assignee/caseManage/checkDepartment
      checkDepartment() {
        this.$axios
          .post("/api/assignee/caseManage/checkDepartment", {
            departmentId: this.departmentId
          })
          .then(res => {
            if (res.data.code == 0) {
              console.log(res.data.code,234)
              this.hasAbility = res.data.code ? true : false;
              if(!this.hasAbility) {
                this.getWorkers();
              }
            } else {
              this.$util.failCallback(res.data, this);
            }
          })
          .catch(err => {
            console.log(err);
          });
      },

     // 人工分案
     allotChooseCase() { 
        this.$axios
          .post("/api/assignee/caseManage/allotCase", JSON.parse(JSON.stringify({
            departmentId: this.departmentId,caseIds:this.selected,isRight:this.hasAbility-0,staffId: this.aStuffId
          })))
          .then(res => {
            if (res.data.code == 0) {
              this.$message.success('分案成功');
              this.cancelForm();
              this.$emit('refreshList')
            } else {
              this.$util.failCallback(res.data, this);
            }
          })
          .catch(err => {
            console.log(err);
          });
     },

     // 检查分配比例 
     checkPercent(row) {
       if((row.percent <= 100 || row.percent >= 0) && Number.isNaN(row.percent)) {
           row.errMsg = '';
       } else {
           row.errMsg = "比例格式错误";
           this.hasFault = true;
       }
     }
    },
    created() {}
  };

</script>
<style lang="scss" scoped>
  .el-dialog .el-form {
    width: 70%;
    margin: 0 auto;
  }
  .el-select .el-input {
      width:100%;
  }

  .el-form-item:last-child{
      text-align: right;
  }

  .el-form-item {
      margin-bottom: 5px;
  }

  .el-table th>.cell, .el-table .cell{
      text-align: center;
  }

  .edit::after {
      content: " %";
  }

  .edit .el-input__inner {
      width: 60px;
  }

  .errMsg {
      color: #f00;
  }

</style>


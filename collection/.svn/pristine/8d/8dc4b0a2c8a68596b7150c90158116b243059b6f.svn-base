<template>
  <el-table :data="tb.data" style="width: 100%" class="extension" default-expand-all v-loading="loading">
    <el-table-column type="index"></el-table-column>
    <el-table-column v-for="field in tb.fields" align="center" :prop="field.key" :label="field.label" :width="field.width" :key="field.key">
    </el-table-column>
    <el-table-column type="expand"  >
      <template slot-scope="props">
        
        <h5 style="margin-top:0">1. 联系人信息：</h5>
         <el-form inline class="form-detail condition-form" label-position="right" > 
          <el-form-item label="联系人：">
            <span>{{ props.row.markDetail.callName   }}</span>
          </el-form-item>
          <el-form-item label="电话：">
            <span>{{ props.row.markDetail.callPhone }}</span>
          </el-form-item>
          <el-form-item label="呼叫时间：">
            <span>{{ props.row.markDetail.createTime }}</span>
          </el-form-item>
        </el-form>
        <el-form inline class="form-detail condition-form" label-position="right" > 
          <el-form-item label="催收反馈：" style="width:100%">
           <el-tag v-for="label in props.row.markDetail.label" :key="label.id" size="mini">{{label}}</el-tag>
          </el-form-item>
        </el-form>
        <h5>2. 新增联系人信息：  <span v-if="!props.row.markDetail.addContact.length" >空</span></h5>
        <span v-if="!props.row.markDetail.addContact.length" ></span>
        <div v-else>
        <el-form inline class="form-detail condition-form" label-position="right"   v-for="item in props.row.markDetail.addContact" :key="item.id">
          <el-form-item label="姓名：">
            <span>{{ item.contactName }}</span>
          </el-form-item>
          <el-form-item label="手机号码：">
            <span>{{ item.contactTel }}</span>
          </el-form-item>
          <el-form-item label="身份证号：">
            <span>{{ item.contactIdnumber }}</span>
          </el-form-item>
          <el-form-item label="关系：">
            <span>{{item.contactRelation }}</span>
          </el-form-item>
          <el-form-item label="公司：">
            <span>{{item.companyName }}</span>
          </el-form-item>
          <el-form-item label="地址：">
            <span>{{item.usualAddress }}</span>
          </el-form-item>
          <el-form-item label="公司地址：">
            <span>{{item.companyAddress }}</span>
          </el-form-item>
          <el-form-item label="邮箱：">
            <span>{{item.email}}</span>
          </el-form-item>
           <el-form-item label="QQ：">
            <span>{{item.contactQqCode}}</span>
          </el-form-item>
           <el-form-item label="微信：">
            <span>{{item.contactWechatCode}}</span>
          </el-form-item>
        </el-form>
        </div>
        <h5>3. 还款信息：</h5>
        <el-form inline class="form-detail condition-form" label-position="right" >
          <el-form-item label="承诺还款金额：">
            <span>{{ props.row.markDetail.promiseAmount}}</span>
          </el-form-item>
          <el-form-item label="承诺还款时间：">
            <span>{{ props.row.markDetail.promiseRepaymentTime}}</span>
          </el-form-item>
          <el-form-item label="申请减免金额：">
            <span>{{ props.row.markDetail.reliefAmount}}</span>
          </el-form-item>
        </el-form>
         <h5>4. 催收记录：</h5>
        <el-form inline class="form-detail condition-form" label-position="right" >
          <el-form-item label="催收记录：" style="width: 100%">
            <span>{{ props.row.markDetail.collectionRemark}}</span>
          </el-form-item>
        </el-form>  

      </template> 
    </el-table-column> 
  </el-table>

</template>



<script>
const fields = [
  {
    key: "callTime",
    label: "提交时间",
    width: "150"
  },
  // {
  //   key: "callDuration",
  //   label: "通话时长",
  //   width: "150"
  // },
  {
    key: "collector",
    label: "催收员",
    width: "auto"
  },
  {
    key: "callName",
    label: "催收对象姓名",
    width: "auto"
  },
  {
    key: "relation",
    label: "关系",
    width: "auto"
  },
  {
    key: "callPhone",
    label: "电话",
    width: "120"
  },

  {
    key: "phoneStatus",
    label: "电话状态",
    width: "auto"
  },
  {
    key: "phoneAnswerStatus",
    label: "接听状态",
    width: "auto"
  },
  {
    key: "caseStatus",
    label: "案件状态",
    width: "auto"
  },




];
export default {
  name: 'collectionRecord',
  props: {
    caseCode: {

    },
    caseId: {

    },
    caseManageId: {

    }
  },
  data() {
    return {
      tb: {
        data: [],
        fields: fields,
      },
      expansionDataArr: [],
      loading: false
    }
  },
  methods: {
    // 获取数据列表
    getList(caseCode,caseId,caseManageId) {
      this.loading = true;
      this.$axios
        .post("/api/assignee/collectionManage/queryCollectionMark", {
          "caseId":Number( caseId) || this.caseId,
          "caseManageId": Number(caseManageId) || this.caseManageId,
          "caseCode": caseCode || this.caseCode
        })
        .then(res => {
          if (res.data.code == 0) {
            this.tb.data = res.data.data;
            // for(var item in this.tb.data) {
            //   this.tb.data[item].index = item;
            //    this.expansionDataArr[item]= {
            //        callName: '',	
            //        callPhone: '',
            //        collectionRemark: '',	
            //        contactRelation: '',
            //        createTime: '',	
            //        label: [],	
            //        promiseAmount: '',	
            //        promiseRepaymentTime: '',	
            //        reliefAmount: '',
            //        addContact: [
            //        ]
                   
            //   };
            // }
          } else {
            this.$util.failCallback(res.data, this);
          }
          this.loading = false;
        })
        .catch(err => {
          console.log(err);
        });
    },
    // 获取展开数据
    // getExpansionData(row) {
    //   this.$axios
    //     .post("/api/assignee/collectionMark/getCollectionMarkById", {
    //       "caseId": this.caseId,
    //       "collectionMarkId": row.collectionMarkId
    //     })
    //     .then(res => {
    //       if (res.data.code == 0) {
    //         this.expansionDataArr[row.index]= res.data.data;
    //       } else {
    //         this.$util.failCallback(res.data, this);
    //       }
    //     })
    //     .catch(err => {
    //       console.log(err);
    //     });
    // },
    // // 表格行收展
    // toggleRowExpansion(row) {
    //    this.getExpansionData(row);

    // },

    //鼠标移入
    // cellHover(row,column) {
    //   if(!column.label)  this.getExpansionData(row);
     
    // }

  },
  created() {
    this.getList();
  }
}

</script>
<style lang="scss" scoped>
h5 {
  font-size:12px;
  text-align:left;
  font-weight: 600;
  margin-top:10px;
}
  .demo-table-expand {
    font-size: 0;
  }
  .demo-table-expand label {
    width: 90px;
    color: #99a9bf;
  }
  .demo-table-expand .el-form-item {
    margin-right: 0;
    margin-bottom: 0;
    width: 50%;
  }
  .form-detail label {
    color: #606266
  }
  .el-tag {
    margin-right: 10px;
  }
</style>

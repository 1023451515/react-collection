<template>
  <div class="content-body">
    <!-- 顶部，包括标题，操作按钮-->
    <div class="bd-top">
      <div class="md clearfix">
        <!-- 1、左边标题 -->
        <div class="md-left">
          <h5>贷款机构分析</h5>
        </div>
        <!-- 2、右边操作按钮 -->
        <div class="md-right">

        </div>
      </div>
    </div>
    <div class="bd-main">
      <el-form :inline="true" size="mini">
        <div>
          <el-button-group>
            <el-button size="mini" @click.native="today" :class="btnClass[0]">今天</el-button>
            <el-button size="mini" @click.native="yesterday" :class="btnClass[1]">昨天</el-button>
            <el-button size="mini" @click.native="lastWeek" :class="btnClass[2]">过去7天</el-button>
            <el-button size="mini" @click.native="lastMonth" :class="btnClass[3]">过去30天</el-button>
          </el-button-group>
          <el-date-picker size="mini" v-model="countDate" start-placeholder="开始日期" end-placeholder="结束日期" type="daterange" @change="countDateChange"
            value-format="yyyy-MM-dd" format="yyyy/MM/dd" placeholder="选择日期">
          </el-date-picker>
          <el-form-item label="账龄" prop="receivableAge">
            <el-select v-model="conditionForm.receivableAge" placeholder="请选择">
              <el-option :label="item.name" :value="item.code" v-for="item in dropdownData.receivableAge" :key="item.id"></el-option>
            </el-select>
          </el-form-item>
          <el-form-item label="手别" prop="batchTimes">
            <el-select placeholder="请选择手别" v-model="conditionForm.batchTimes">
              <el-option v-for="option in dropdownData.bacthTimes" :label="option.name" :value="option.code"></el-option>
            </el-select>
          </el-form-item>

          
        </div>
        <!-- 案件回收金额分析/万元 -->
        <div ref="repayMoneyChart" style="height:380px;"></div>
        <!-- 案件回收数量分析 -->
        <div ref="repayCountChart" style="height:380px;"></div>
      </el-form>
    </div>
  </div>
</template>

<script>
  import echarts from 'echarts'
  import moment from "moment"
  export default {
    data() {
      return {
        dropdownData: {},
        btnClass: [
          '',
          '',
          '',
          ''
        ],
        countDate: [],
        conditionForm: {
          // 统计时间
          countDateMin: '',
          countDateMax: '',
          batchTimes: '',
          receivableAge: '',


        },
        repayMoneyChart: null,
        repayMoneyData: {
         
          xAxisData: [],
          seriesData: [
            [],
            []
          ],
        }
      }
    },
    created(){
      // 获取图标数据
      // 获取下拉数据
    },
    mounted() {
      // 初始化chart对象
      this.repayMoneyChart = echarts.init(this.$refs.repayMoneyChart);
      // 填充数据
      this.drawChart(this.repayMoneyChart, this.repayMoneyData)
    },
    methods: {
      getdropdownData() {
        // 获取下拉数据
        this.$axios.post('', {}).then((res) => {
          if (res.data.code == 0) {
            this.dropdownData = res.data.data;

          } else {
            this.$util.failCallback(res.data, this)
          }
        }).catch((err) => {
          console.log(err)
        })
      },
      drawChart(chartObj, data, title) {
        var option = {
          title: {
            text: title,
            left: 5,
          },
          tooltip: {
            trigger: 'axis',
            axisPointer: {
              type: 'shadow'
            }
          },
          legend: {
            data: ['委案金额', '回收金额'],
            bottom: 10,
            left: 'center'
          },
          yAxis: {
            type: 'value',
            boundaryGap: [0, 0.01]
          },
          xAxis: {
            type: 'category',
            data: data.xAxisData,
          },
          series: [{
              name: '委案金额',
              type: 'bar',
              data: data.seriesData[0],
              itemStyle: {
                color: '#a9c4d5'
              }
            },
            {
              name: '回收金额',
              type: 'bar',
              data: data.seriesData[1],
              itemStyle: {
                color: '#939ccd'
              }
            }
          ]
        };
        chartObj.setOption(option);
      },
      getchartData(url, whichChart) {
        // 接口参数为this.conditionForm

        // 清除缓存
        whichChart = {
          xAxisData: [],
          seriesData: [
            [],
            []
          ],
        }
        //   处理数据
        // res.data.data.forEach(function (item) {
        //   whichChart.xAxisData.push(item.date)
        //   whichChart.seriesData[0].push(item.commitMoney)
        //    whichChart.seriesData[1].push(item.repayMoney)
        // }, this)
      },
      // 切换分案结果：今天
      today() {
        if (this.btnClass[0]) {
          return false
        } else {
          this.btnClass = ['el-button--primary', '', '', '']
        }
        this.conditionForm.countDateMin = moment().format("YYYY-MM-DD")
        this.conditionForm.countDateMax = moment().format("YYYY-MM-DD");
        this.getList();
      },

      // 切换分案结果：昨天
      yesterday() {
        if (this.btnClass[1]) {
          return false
        } else {
          this.btnClass = ['', 'el-button--primary', '', '']
        }
        this.conditionForm.countDateMin = moment().subtract(1, 'days').format("YYYY-MM-DD")
        this.conditionForm.countDateMax = moment().subtract(1, 'days').format("YYYY-MM-DD")
        this.getList();
      },

      // 切换分案结果：过去七天
      lastWeek() {
        if (this.btnClass[2]) {
          return false
        } else {
          this.btnClass = ['', '', 'el-button--primary', '']
        }
        this.conditionForm.countDateMin = moment().subtract(7, 'days').format("YYYY-MM-DD")
        this.conditionForm.countDateMax = moment().subtract(1, 'days').format("YYYY-MM-DD")
        this.getList();
      },

      // 切换分案结果：过去三十天
      lastMonth() {
        if (this.btnClass[3]) {
          return false
        } else {
          this.btnClass = ['', '', '', 'el-button--primary']
        }
        this.conditionForm.countDateMin = moment().subtract(30, 'days').format("YYYY-MM-DD")
        this.conditionForm.countDateMax = moment().subtract(1, 'days').format("YYYY-MM-DD")
        this.getList();
      },
      countDateChange(data) {
        this.btnClass = ['', '', '', ''];
        if (!data) {
          this.conditionForm.countDateMin = ''
          this.conditionForm.countDateMax = ''
        } else {

          this.conditionForm.countDateMin = data[0]
          this.conditionForm.countDateMax = data[1]
        }

        this.getList();
      },
    }
  }

</script>

<style lang="scss">


</style>

<template>
    <aside class="aside-wrap">
        <!-- 收起 -->
        <el-button size="mini" icon="el-icon-d-arrow-left"  @click="COLLAPSE_ASIDE" v-show="isCollapse == false" class="extend"></el-button>
        <el-button size="mini" icon="el-icon-d-arrow-right"  @click="EXPAND_ASIDE" v-show="isCollapse == true" class="collapse"></el-button>
        <el-menu  :default-openeds="openeds"  class="el-menu-vertical-demo" @open="handleOpen" @close="handleClose" background-color="#3D3D3D" text-color="#fff"  :unique-opened='true' active-text-color="#ffd04b" router :collapse="isCollapse">
            <template v-for="item in menuList">
                <template v-if="item.children.length > 0">
                    <el-submenu :index="''+item.id">
                        <template slot="title">
                            <i :class="item.menuIcon" class="iconfont aside-icon"></i>
                            <span slot="title">{{item.name}}</span>
                        </template>
                        <menu-item v-for="subitem in item.children" :item="subitem" :key="subitem.id"></menu-item>
                    </el-submenu>
                </template>
                <template v-else>
                    <el-menu-item :index="''+item.id" :route="item.identifier">
                        <i :class="item.menuIcon" class="iconfont aside-icon"></i>
                        <span slot="title">{{item.name}}</span>
                    </el-menu-item>
                </template>
            </template>
        </el-menu>
    </aside>
</template>


<script>
import { mapGetters, mapMutations } from 'vuex'
import menuItem from './menu_item.vue'
export default {
    computed: mapGetters({
        isCollapse: 'asideStatus'
    }),
    components: {
        menuItem: menuItem
    },
    data() {
        return {
            // 设置菜单展开
            openeds: ['1','4'],
            uniqueOpened: false,
            menuList: [
            ],
        }
    
    },
    created(){
        this.$axios.post('/api/assignee/currentUser/getMenuResource').then(res=>{
            if(res.data.code == 0){
                console.log(res.data)
                this.menuList = res.data.data
            }else{
                this.$util.failCallback(res.data,this)
            }
        })
    },
    methods: {
        ...mapMutations([
            // add: 'increment' // 将 `this.add()` 映射为 `this.$store.commit('increment')`
            'COLLAPSE_ASIDE',
            'EXPAND_ASIDE'
        ]),
        handleOpen(key, keyPath) {
            console.log(key, keyPath)
        },
        handleClose(key, keyPath) {
            console.log(key, keyPath)
        }
    }
  
}
</script>


<style lang="scss">
@import '../style/base';


.fc-white {
    color: #fff;
}


.aside-wrap {
     width: 210px;
    // position: relative;
    .el-submenu__title {
        span {
            margin: 0 0 0 4px;
        }
    }
    .el-menu-vertical-demo:not(.el-menu--collapse) {
        width: 210px; // min-height: 400px;
        overflow-x: hidden;
    }
    .el-menu-vertical-demo {
        height: 100%;
        padding-top: 44px;
        overflow: auto;
    }
    .el-button {
        width: 24px;
        height: 24px;
        position: absolute;
        color: #fff;
        border: none;
        padding: 9px 8px;
        top: 12px;
        z-index: 999;
        border-radius: unset;
        line-height: 24px;
        text-align: center;
        
    }
    .extend {
      right: 0px;
      height: 44px;
      top:0;
      transition: right linear 2s;
      background:  linear-gradient(left,#38b8c5,#4ce9f9);
      &:hover {
         // background-color: #262626;
         color: #4ce9f9
      }
      i {
            height: 36px;
            line-height: 24px;
            display: block;
            position: absolute;;
            right: 3px;
            top: 10px;
            font-size: 18px;
            text-align: center;
        }
    
    }
    .collapse {
        left: 0px;
        top: 0;
        background-color: rgb(61, 61, 61);
        width:63px;
        height:44px;
        margin: 0;
     //   transition: background-color 0.5s linear; 
        &:hover {
         background-color: #4ce9f9;
        }
        i {
            height: 24px;
            line-height: 24px;
            display: block;
            position: absolute;;
            left: 50%;
            top: 11px;
            font-size: 18px;
            margin-left: -12px;
        }
    }
    .clear {
        clear: both;
    }


  }  

</style>
